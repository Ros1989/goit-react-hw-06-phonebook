{"version":3,"sources":["redux/contacts/contacts-action.js","components/ContactsForm/StyledComponents.js","components/ContactsForm/ContactsForm.container.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/StyledComponents.js","components/ContactsList/ContactList.container.js","components/ContactsList/ContactsList.jsx","components/Section/StyledComponents.js","components/Section/Section.jsx","components/ContactsFilter/StyledComponents.js","components/ContactsFilter/ContactsFilter.container.js","components/ContactsFilter/ContactsFilter.jsx","components/App.js","redux/contacts/contact-reducer.js","redux/store.js","index.js"],"names":["addItem","createAction","name","number","payload","id","uuidv4","deleteItem","changeFilter","Form","styled","form","FormLabel","label","Input","input","Button","button","connect","state","contacts","items","dispatch","AddContact","useState","setNameValue","setNumberValue","handleInputChange","event","target","value","onSubmit","e","preventDefault","Number","isNaN","alert","type","placeholder","onChange","TaskList","ul","TaskItem","li","TaskItemElements","p","filter","item","toLowerCase","includes","onDeleteContact","map","i","onClick","Section","section","Title","h2","SectionBlock","title","children","FilterBlock","div","Label","OnInputFilter","App","itemsReducer","createReducer","action","filterReducer","_","contactsReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e9615ac6.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addItem = createAction('contacts/add', (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nexport const deleteItem = createAction('contacts/delete');\r\n\r\nexport const changeFilter = createAction('filter/change');","import styled from 'styled-components';\n\nconst Form = styled.form`\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nconst FormLabel = styled.label`\n  width: 85%;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-around;\n  font-weight: 500;\n  color: #ff18cd;\n`;\nconst Input = styled.input`\n  height: 15px;\n  width: 250px;\n`;\n\nconst Button = styled.button`\n  padding: 2px 10px;\n  max-width: 250px;\n  height: 30px;\n  background-color: #fff418;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  :hover {\n    transform: scale(1.2);\n  }\n`;\n\nexport { Form, FormLabel, Input, Button };\n","import { connect } from 'react-redux';\r\nimport { addItem } from '../../redux/contacts/contacts-action';\r\nimport ContactsForm from './ContactsForm';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    AddContact: (name, number) => dispatch(addItem(name, number)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsForm);","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormLabel, Input, Button } from './StyledComponents';\n\nexport default function ContactsForm({ AddContact }) {\n  const [name, setNameValue] = useState('');\n  const [number, setNumberValue] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setNameValue(value);\n        break;\n      case 'number':\n        setNumberValue(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    if (!name || !number) {\n      alert('You have not entered all the data');\n      return;\n    }\n\n    if (Number.isNaN(+number)) {\n      alert('Phone number must contain only numbers');\n      return;\n    }\n    AddContact(name, number);\n    setNameValue('');\n    setNumberValue('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmitForm}>\n      <FormLabel>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Enter name\"\n          onChange={handleInputChange}\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <Input\n          name=\"number\"\n          type=\"tel\"\n          value={number}\n          placeholder=\"Enter phone number\"\n          onChange={handleInputChange}\n        />\n      </FormLabel>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n\nContactsForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nconst TaskList = styled.ul`\n  max-width: 700px;\n  margin: 0 auto;\n`;\nconst TaskItem = styled.li`\n  padding: 5px 5px 5px 5px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  /* background-color:grey; */\n  background-color: #fff;\n  :not(:nth-child(odd)) {\n    background-color: #cacaca;\n  }\n  border: 1px solid black;\n  border-radius: 0.5rem;\n  margin-bottom: 10px;\n  box-shadow: 10px 5px 5px grey;\n`;\nconst TaskItemElements = styled.p`\n  font-weight: 500;\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\nconst Button = styled.button`\n  padding: 5px 10px;\n  max-width: 200px;\n  height: 20px;\n  background-color: goldenrod;\n  border: none;\n  border-radius: 0.5rem;\n  font-size: 0.6rem;\n  color: #fff;\n  text-transform: uppercase;\n  cursor: pointer;\n`;\nexport { TaskList, TaskItem, TaskItemElements, Button };\n","import { connect } from 'react-redux';\r\nimport { deleteItem } from '../../redux/contacts/contacts-action';\r\nimport ContactList from './ContactsList';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.contacts.items.filter(item =>\r\n      item.name.toLowerCase().includes(state.contacts.filter.toLowerCase()),\r\n    ),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: id => dispatch(deleteItem(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TaskList,\n  TaskItem,\n  TaskItemElements,\n  Button,\n} from './StyledComponents';\n\nexport default function ContactsList({ items, onDeleteContact }) {\n  return (\n    <TaskList>\n      {items.map(i => (\n        <TaskItem key={i.id}>\n          <TaskItemElements>{i.name} :</TaskItemElements>\n          <TaskItemElements>{i.number}</TaskItemElements>\n          <Button type=\"button\" onClick={() => onDeleteContact(i.id)}>\n            Delete\n          </Button>\n        </TaskItem>\n      ))}\n    </TaskList>\n  );\n}\n\nContactsList.propTypes = {\n  items: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  padding: 20px 0px 20px;\n  max-width: 600px;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  background-color: #18f0ff;\n`;\nconst Title = styled.h2`\n  width: 100%;\n  text-align: center;\n  font-size: 2rem;\n  color: #1834ff;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: 40px;\n`;\n\nexport { Section, Title };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section, Title } from './StyledComponents';\n\nexport default function SectionBlock({ title, children }) {\n  return (\n    <Section>\n      <Title>{title}</Title>\n      {children}\n    </Section>\n  );\n}\n\nSectionBlock.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nconst FilterBlock = styled.div`\n  width: 100%;\n  padding-bottom: 20px;\n  margin-top: 10px;\n`;\nconst Label = styled.label`\n  width: 100%;\n  font-weight: 500;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\nconst Title = styled.p`\n  width: 100%;\n  /* text-align:center; */\n  margin-bottom: 5px;\n  margin-left: 205px;\n  color: #ff188c;\n`;\nconst Input = styled.input`\n  width: 30%;\n`;\nexport { FilterBlock, Label, Title, Input };\n","import { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-action';\r\nimport ContactsFilter from './ContactsFilter';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    value: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    OnInputFilter: value => dispatch(changeFilter(value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsFilter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterBlock, Label, Title, Input } from './StyledComponents';\n\nexport default function FilterContacts({ value, OnInputFilter }) {\n  return (\n    <FilterBlock>\n      <Label>\n        <Title>Find Contacts by name</Title>\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={event => OnInputFilter(event.target.value)}\n        />\n      </Label>\n    </FilterBlock>\n  );\n}\n\nFilterContacts.propTypes = {\n  OnInputFilter: PropTypes.func,\n  value: PropTypes.string,\n};\n","import ContactsForm from './ContactsForm';\nimport ContactsList from './ContactsList';\nimport SectionBlock from './Section';\nimport ContactsFilter from './ContactsFilter';\n\nexport default function App() {\n  return (\n    <>\n      <SectionBlock title=\"Phonebook\">\n        <ContactsForm />\n        <ContactsFilter\n        />\n        <ContactsList/>\n      </SectionBlock>\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as action from './contacts-action'; \r\n\r\nconst itemsReducer = createReducer([], {\r\n  [action.addItem]: (state, { payload }) => [...state, payload],\r\n  [action.deleteItem]: (state, { payload }) =>\r\n    state.filter(item => item.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [action.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactsReducer from './contacts/contact-reducer';\r\n\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'save contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }), logger];\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\n// const persistedReducer = persistReducer(persistConfig, contactsReducer)\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport store from './redux/store'; \r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        {/* <BrowserRouter> */}\r\n        <App />\r\n        {/* </BrowserRouter> */}\r\n      </PersistGate>\r\n  </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}